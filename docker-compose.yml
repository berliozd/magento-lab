version: "3.7"
services:
  php:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    networks:
      - magento_network
    working_dir: /var/www/html
    volumes:
      - "nfsmount:/var/www/html"
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    depends_on:
      - php
      - mysql
    networks:
      - magento_network
    ports:
      - "80:80"
    volumes:
      - "nfsmount:/var/www/html"
      - ./docker/nginx/vhost:/etc/nginx/conf.d/default.conf
  mysql:
    image: mysql:5.7
    networks:
      - magento_network
    ports:
      - "3306:3306"
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=magento
    volumes:
      - mysql-volume:/var/lib/mysql
  redis:
    image: redis:latest
    networks:
      - magento_network
    ports:
      - "26379:6379"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
    environment:
      - node.name=localhost
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=localhost
      - cluster.initial_master_nodes=localhost
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
          soft: -1
          hard: -1
    volumes:
      - elasticsearch-volume:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - magento_network
  mailhog:
    image: mailhog/mailhog
    networks:
      - magento_network
    ports:
      - 82:8025
networks:
  magento_network:
volumes:
  mysql-volume:
  elasticsearch-volume:
  nfsmount:
    driver: local
    driver_opts:
      type: nfs
      o: addr=host.docker.internal,rw,nolock,hard,nointr,nfsvers=3
      device: ":$PWD"

